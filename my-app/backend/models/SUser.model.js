/**
 * Tyler Hay / hayty@mail.gvsu.edu
 * December 2020
 * Database schema for Super Users
 * 
 * This schema acts as an organizational tool to ensure that
 * each Super User document in the SUser collection within the
 * database follows a similar format
 * 
 * Super User (SUser) documents represent instructors. Upon logging in an instructor
 * should be able to go to the Super User front to create/edit scenarios and see data
 * about players. 
 * 
 * Note to next team: I don't believe there is currently a method that
 * links instructors to a super user title. The current Google Sign In
 * implementation works with players, so if an instructor signs in they will
 * be signed in as a player. 
 */

const mongoose = require('mongoose');
const Schema = mongoose.Schema;

 // Super User Schema Object
 const superUserSchema = new Schema({

   //Super User ID: Unique to every Super User
   SUID: {type: Number, required: true},
   //Super User Name: Should be autogenerated by Google Sign In
   SUName: {type: String, required: true},
   //Player List: List of students tied to the player's instructor ID field.
   PlayerList: {type: Array, required: true},
   //Last Play: Date of last sign in.
   LastPlay: {type: Date, required: true}
 }, {
   
  //Timestamps will automatically put DateCreated and DateEdited
  //fields in the schema
   timestamps: true,
 

 });

 //exporting the schema model so route files can make use of it.
 const SUser = mongoose.model('SUser', superUserSchema);

 module.exports = SUser;